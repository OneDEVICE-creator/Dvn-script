if not game:IsLoaded() then
    game.Loaded:Wait()
end

local enemyNames = game:GetService("ReplicatedStorage").Units.Noobs:GetChildren()
_G.ScriptEnabled = _G.ScriptEnabled or true -- Default ON

local function EnforceTransparency(head)
    head:GetPropertyChangedSignal("Transparency"):Connect(function()
        if _G.ScriptEnabled then
            head.Transparency = _G.Transparency or 0.9
        end
    end)
end

local function ResizeHead(instance)
    if instance.Name == "APU" or not _G.ScriptEnabled then return end -- Stop if disabled
    for _, x in ipairs(enemyNames) do
        if tostring(x) == instance.Name and instance:FindFirstChild("Head") then
            local head = instance.Head
            
            -- Reset head if script is disabled
            if not _G.ScriptEnabled then
                head.Size = Vector3.new(1, 1, 1) -- Default size
                head.Transparency = 0
                return
            end

            -- Apply transparency enforcement
            head.Transparency = _G.Transparency or 0.9
            EnforceTransparency(head)

            -- Adjust head size dynamically
            if instance.Name == "Jetpacker" or instance.Name == "Sniper" then
                head.Size = Vector3.new(5.0, 5.0, 5.0) -- Fixed size
            elseif instance.Name == "Prometheus" then
                head.Size = Vector3.new(_G.PrometheusHeadSize or 2.0, _G.PrometheusHeadSize or 2.0, _G.PrometheusHeadSize or 2.0)
            else
                head.Size = Vector3.new(_G.EnemiesHeadSize or 8.0, _G.EnemiesHeadSize or 8.0, _G.EnemiesHeadSize or 8.0)
            end
            
            head.Massless = true
            head.CanCollide = false
        end
    end
end

-- Resize heads for all existing enemies
for _, v in ipairs(workspace:GetChildren()) do
    task.wait()
    ResizeHead(v)
end

-- Resize heads for newly added enemies
workspace.ChildAdded:Connect(function(v)
    task.wait()
    ResizeHead(v)
end)

-- **Real-Time Update Loop**
task.spawn(function()
    while true do
        if _G.ScriptEnabled then
            for _, v in ipairs(workspace:GetChildren()) do
                if v:FindFirstChild("Head") then
                    ResizeHead(v)
                end
            end
        end
        wait(0.5) -- Update every 0.5 seconds
    end
end)

-- **Toggle Notification**
local function executeScript()
    if _G.ScriptEnabled then
        Rayfield:Notify({
            Title = "Big Heads",
            Content = "Big Heads Enabled!",
            Duration = 3,
            Image = nil, 
        })
    else
        Rayfield:Notify({
            Title = "Big Heads",
            Content = "Big Heads Disabled!",
            Duration = 3,
            Image = nil, 
        })
    end
end

executeScript()
